{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Razas\\\\OneDrive\\\\Desktop\\\\TunerApp\\\\guitar-tuner\\\\src\\\\pages\\\\AudioRecorder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Button, Typography, Card, CardContent } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioRecorder = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [note, setNote] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const handleStartRecording = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder = new MediaRecorder(stream, {\n      mimeType: 'audio/wav' // <- preferred format for Python backend\n    });\n    mediaRecorderRef.current = mediaRecorder;\n    audioChunksRef.current = [];\n    mediaRecorder.ondataavailable = event => {\n      if (event.data.size > 0) {\n        audioChunksRef.current.push(event.data);\n      }\n    };\n    mediaRecorder.onstop = async () => {\n      const audioBlob = new Blob(audioChunksRef.current, {\n        type: 'audio/webm'\n      });\n      const formData = new FormData();\n      formData.append('file', audioBlob, 'recording.webm');\n      const response = await fetch('http://localhost:5000/api/detect-note', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setNote(data.note || 'No note detected');\n    };\n    mediaRecorder.start();\n    setIsRecording(true);\n    setTimeout(() => {\n      mediaRecorder.stop();\n      setIsRecording(false);\n    }, 3000); // Stop after 3 seconds\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 400,\n      margin: 'auto',\n      mt: 5,\n      p: 2,\n      borderRadius: 4,\n      boxShadow: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Guitar Note Detector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: isRecording ? 'secondary' : 'primary',\n        onClick: handleStartRecording,\n        disabled: isRecording,\n        fullWidth: true,\n        children: isRecording ? 'Recording...' : 'Start Recording'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        mt: 3,\n        textAlign: \"center\",\n        children: note && `Detected Note: ${note}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorder, \"Bs5H9rEGkAJh3ghnVelxzQ87In0=\");\n_c = AudioRecorder;\nexport default AudioRecorder;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorder\");","map":{"version":3,"names":["React","useState","useRef","Button","Typography","Card","CardContent","jsxDEV","_jsxDEV","AudioRecorder","_s","isRecording","setIsRecording","note","setNote","mediaRecorderRef","audioChunksRef","handleStartRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","mimeType","current","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","formData","FormData","append","response","fetch","method","body","json","start","setTimeout","stop","sx","maxWidth","margin","mt","p","borderRadius","boxShadow","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","fullWidth","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/Razas/OneDrive/Desktop/TunerApp/guitar-tuner/src/pages/AudioRecorder.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Button, Typography, Card, CardContent } from '@mui/material';\r\n\r\nconst AudioRecorder = () => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [note, setNote] = useState('');\r\n  const mediaRecorderRef = useRef(null);\r\n  const audioChunksRef = useRef([]);\r\n\r\n  const handleStartRecording = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n    const mediaRecorder = new MediaRecorder(stream, {\r\n      mimeType: 'audio/wav' // <- preferred format for Python backend\r\n    });\r\n    mediaRecorderRef.current = mediaRecorder;\r\n    audioChunksRef.current = [];\r\n\r\n    mediaRecorder.ondataavailable = event => {\r\n      if (event.data.size > 0) {\r\n        audioChunksRef.current.push(event.data);\r\n      }\r\n    };\r\n\r\n    mediaRecorder.onstop = async () => {\r\n      const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/webm' });\r\n      const formData = new FormData();\r\n      formData.append('file', audioBlob, 'recording.webm');\r\n\r\n      const response = await fetch('http://localhost:5000/api/detect-note', {\r\n        method: 'POST',\r\n        body: formData\r\n      });      \r\n      const data = await response.json();\r\n      setNote(data.note || 'No note detected');\r\n    };\r\n\r\n    mediaRecorder.start();\r\n    setIsRecording(true);\r\n\r\n    setTimeout(() => {\r\n      mediaRecorder.stop();\r\n      setIsRecording(false);\r\n    }, 3000); // Stop after 3 seconds\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 400, margin: 'auto', mt: 5, p: 2, borderRadius: 4, boxShadow: 3 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Guitar Note Detector\r\n        </Typography>\r\n        <Button \r\n          variant=\"contained\" \r\n          color={isRecording ? 'secondary' : 'primary'} \r\n          onClick={handleStartRecording}\r\n          disabled={isRecording}\r\n          fullWidth\r\n        >\r\n          {isRecording ? 'Recording...' : 'Start Recording'}\r\n        </Button>\r\n        <Typography variant=\"h6\" mt={3} textAlign=\"center\">\r\n          {note && `Detected Note: ${note}`}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AudioRecorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}